name: Build
on:
  pull_request:
  push:
    branches:
      - "**"
  workflow_call:
    inputs:
      ref:
        required: false
        type: string
      release:
        required: false
        type: boolean

permissions:
  contents: read
  actions: write

jobs:
  build:
    strategy:
      matrix:
        target: [
          {name: "x86_64-unknown-linux-gnu", pkg: "gcc-x86_64-linux-gnu"},
          {name: "aarch64-unknown-linux-gnu", pkg: "gcc-aarch64-linux-gnu"},
          {name: "x86_64-apple-darwin", pkg: ""},
          {name: "aarch64-apple-darwin", pkg: ""}
        ]
    runs-on: ${{ endsWith(matrix.target.name, 'apple-darwin') && 'macos-latest' || 'ubuntu-latest' }}
    steps:
      - name: Checkout default ref
        if: ${{ inputs.ref == '' }}
        uses: actions/checkout@v4.1.1
      - name: Checkout requested ref
        if: ${{ inputs.ref != '' }}
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ inputs.ref }}
      - name: Install linker for ${{ matrix.target.name }}
        if: ${{ matrix.target.pkg != '' }}
        uses: awalsh128/cache-apt-pkgs-actions@v1.4.1
        with:
          packages: ${{ matrix.target.pkg }}
          version: 1
      - name: Add rust target
        run: |
          rustup target add ${{ matrix.target.name }}
        shell: bash
      - uses: actions/cache@v4.0.0
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.target.name }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo build --release --target ${{ matrix.target.name }}
      - run: tar --ignore-failed-read -czf wks-client-responder_release.tar.gz -C target/${{ matrix.target.name }}/release wks-client-responder wks-client-responder.exe
      - uses: actions/upload-artifact@v4.3.1
        with:
          name: ${{ matrix.target.name }}
          path: wks-client-responder_${{ matrix.target.name }}_release.tar.gz
